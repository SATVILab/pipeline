% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/setup_proj_dir.R
\name{.setup_proj_dir}
\alias{.setup_proj_dir}
\title{Set up project directory}
\usage{
.setup_proj_dir(dir_proj, dir_proj_empty, params_dots)
}
\arguments{
\item{dir_proj}{\code{character} or \code{function}.
\itemize{
  \item{If \code{character}, then this folder is created if it doesn't exist.}
  \item{If a \code{function}, then it should be a function that
  has a single argument that expects the named list produced by \code{rlang::list2(...)}.
  This function should simply return. the project directory as a character.
  This folder is created if it doesn't exist.}
}}

\item{dir_proj_empty}{\code{logical}. If \code{TRUE}, then the project directory
is emptied before any results are saved. Default is \code{FALSE}.
TODO: Wrap each of the *_fn functions so that whatever they return is saved to the
correct folder.
TODO: Enable debugging via a parameter even sub-functions of the main functions.
TODO: Ensure that functions are not run in global environment but run in own environment (or a clean environment, as in knitr);
if simply ensuring that they're not run in global environment, then add the function
to save object to global environment if need be, and then delete it upon function
exit.}

\item{params_dots}{named list. Named list returned by \code{rlang::list2} applied to
the ellipses of \code{run}.}
}
\value{
A \code{character}, that is the absolute path of the project directory. Side effects
are that this project directory is created if it doesn't exist and emptied if \code{proj_dir_empty}
is \code{TRUE}.
}
\description{
Get the project directory, either as supplied (if \code{dir_proj} in \code{run} is
a \code{character}) or as created by the \code{dir_proj} parameter if its argument is a \code{function}
taking its arguments from the dots of \code{run}.

This directory is always created, and emptied if instructed.
}
